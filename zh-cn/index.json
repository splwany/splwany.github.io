[{"categories":["待办"],"content":"面试大厂需要了解的知识点\n1. Webpack VS Vite 原理   谈谈 AST 语法树？ 谈谈 babel 的作用？ 如何收集代码依赖？ ES Module 与 CMD 区别？   如何搞懂 webpack 原理呢？手写一个 mini-webpack 是非常直接的方法，比去看原理解析文章效率高多了。\r\r需要做的有：\n 造个轮子 - 手写 Webpack 什么是抽象语法树（AST） 如何分析模块的依赖关系 如何将 ES6 转换为 ES5 读懂 bundle 文件中的天书代码 谁会是下一个 Webpack ","date":"2021-05-06","permalink":"/zh-cn/posts/webnotes/questions/","series":["前端"],"tags":["面试问题"],"title":"待学习的知识"},{"categories":["学习笔记"],"content":"MDN文档的HTML学习笔记\n 1. 嵌入 \u0026lt;iframe\u0026gt; 元素\r sandbox属性 该属性需要在已经支持其他\u0026lt;iframe\u0026gt;功能（例如IE 10及更高版本）但稍微更现代的浏览器上才能工作，该属性可以提高安全性设置。\r\r注意：为了提高速度，在主内容完成加载后，使用JavaScript设置iframe的src属性是个好主意。这使您的页面可以更快地被使用，并减少您的官方页面加载时间。\r\r\u0026lt;embed\u0026gt; 和 \u0026lt;object\u0026gt; 元素\r 这两个元素与\u0026lt;iframe\u0026gt;不同，是用来嵌入多种类型的外部内容的通用嵌入工具，包括像Java小程序和Flash，PDF（可在浏览器中显示为一个PDF插件）这样的插件技术，甚至像视频，SVG和图像的内容。\n插件是一种对浏览器原生无法读取的内容提供访问权限的软件\r\r 2. 矢量图形SVG\r 快捷方式：\u0026lt;img\u0026gt; 使用 src 属性设置SVG路径\n疑难解答和跨浏览器支持 对于不支持SVG（IE 8及更低版本，Android 2.3 及更低版本）的浏览器，可以从 src 属性引用 PNG 或 JPG ，并使用 srcset 属性 只有最近的浏览器才能识别）来引用 SVG 。 在这种情况下，仅支持浏览器将加载 SVG - 较旧的浏览器将加载 PNG ：\n\u0026lt;img src=\u0026#34;equilateral.png\u0026#34; alt=\u0026#34;triangle with equal sides\u0026#34; srcset=\u0026#34;equilateral.svg\u0026#34;\u0026gt; 还可以使用 SVG 作为 CSS 背景图像，如下所示。 在下面的代码中，旧版浏览器会坚持他们理解的 PNG ，而较新的浏览器将加载 SVG ：\n.svg { background: url(\u0026#34;fallback.png\u0026#34;) no-repeat center; background-image: url(\u0026#34;image.svg\u0026#34;); background-size: contain; } 像上面描述的\u0026lt;img\u0026gt;方法一样，使用 CSS 背景图像插入 SVG 意味着它不能被 JavaScript 操作，并且也受到相同的 CSS 限制。\n在HTML中引入SVG代码  可以在文本编辑器中打开SVG文件，复制SVG代码，并将其粘贴到HTML文档中 - 这有时称为将SVG内联或内联SVG。确保您的SVG代码在\u0026lt;svg\u0026gt;\u0026lt;/svg\u0026gt;标签中（不要在外面添加任何内容）。\n \u0026lt;svg width=\u0026#34;300\u0026#34; height=\u0026#34;200\u0026#34;\u0026gt; \u0026lt;rect width=\u0026#34;100%\u0026#34; height=\u0026#34;100%\u0026#34; fill=\u0026#34;green\u0026#34; /\u0026gt; \u0026lt;/svg\u0026gt; 优点  将 SVG 内联减少 HTTP 请求，可以减少加载时间。 可以为 SVG 元素分配class和id，并使用 CSS 修改样式。 内联 SVG 是唯一可以在 SVG 图像上使用 CSS 交互（如:focus）和 CSS 动画的方法（即使在常规样式表中）。 可以通过将 SVG 标记包在 \u0026lt;a\u0026gt; 元素中，使其成为超链接。  缺点  这种方法只适用于在一个地方使用的 SVG 。多次使用会导致资源密集型维护（resource-intensive maintenance）。 额外的 SVG 代码会增加 HTML 文件的大小。 浏览器不能像缓存普通图片一样缓存内联 SVG 。 可能会在 \u0026lt;foreignObject\u0026gt; 元素中包含回退，但支持 SVG 的浏览器仍然会下载任何后备图像。考虑一下仅仅为支持过时的浏览器，而增加额外开销是否真的值得。  示例 遁入智瞳！上勾拳！     3. 响应式图片  目的：学习如何使用 srcset 以及 \u0026lt;picture\u0026gt; 元素，来实现网页中的响应式图片处理方法。\n 新特性 srcset / sizes / \u0026lt;picture\u0026gt; —— 都已经被新版本的现代浏览器和移动浏览器支持。\r\r 分辨率切换：不同的尺寸 两个新属性：srcset 和 sizes 提供额外的资源图像和提示。\n  浏览器根据设备宽度到 sizes 中找到不超过 max-width 的那一项 根据此项后面的像素值 a，到 srcset 中找到不小于这个值的最接近的 b 将 srcset 对应的图片路径作为需要显示的图片路径，以达到省流目的   \u0026lt;img srcset=\u0026#34;/images/posts/webnotes/learn_html/water-320w.jpg 320w, /images/posts/webnotes/learn_html/water-480w.jpg 480w, /images/posts/webnotes/learn_html/water-800w.jpg 800w, /images/posts/webnotes/learn_html/water-1280w.jpg 1280w\u0026#34; sizes = \u0026#34;(max-width: 424px) 320px, (max-width: 767px) 460px, (max-width: 991px) 800px, 1280px\u0026#34; src=\u0026#34;/images/posts/webnotes/learn_html/water-1280w.jpg\u0026#34; alt=\u0026#34;Drink more water\u0026#34;\u0026gt; 效果：\n总结：该方式会使浏览器根据设备屏幕大小下载合适的图片，来省流。\r\r 分辨率切换：相同的尺寸，不同的分辨率 如果想支持多分辨率显示，但希望每个人在屏幕上看到的图片的实际尺寸是相同的，使用 srcset 和 x 语法结合——一种更简单的语法——而不用 sizes ，来选择适当分辨率的图片。\n  浏览器根据设备的 DPR（即设备像素比），从 srcset 中找到像素比最接近的图片路径 将此路径的图片显示出来，图片的大小由 CSS 样式表中的 width 值来定义 浏览器会保证图片在任何设备上的物理大小一致   \u0026lt;img srcset=\u0026#34;/images/posts/webnotes/learn_html/mercy-320w.png, /images/posts/webnotes/learn_html/mercy-480w.png 1.5x, /images/posts/webnotes/learn_html/mercy-800w.png 2.5x, /images/posts/webnotes/learn_html/mercy-1280w.png 4x\u0026#34; src=\u0026#34;/images/posts/webnotes/learn_html/mercy-1280w.png\u0026#34; alt=\u0026#34;Overwatch mercy\u0026#34; style=\u0026#34;width: 180px;\u0026#34;\u0026gt; 效果：\n总结：该方式会使浏览器根据设备屏幕像素密度来决定使用哪个版本的图片，并根据 `width` 的值保证图片在所有设备上实际大小一致。\r\r 美术设计  使用 \u0026lt;picture\u0026gt; 元素实现当屏幕缩小时动态得使用对应像素的图片，将内容适应小屏幕观看，例如人物更大的低分辨率图片。\n \u0026lt;picture\u0026gt; \u0026lt;!-- 小手机 --\u0026gt; \u0026lt;source media=\u0026#34;(max-width: 424px)\u0026#34; srcset=\u0026#34;/images/posts/webnotes/learn_html/mercy-320w.png\u0026#34;\u0026gt; \u0026lt;!-- 大手机 --\u0026gt; \u0026lt;source media=\u0026#34;(max-width: 767px)\u0026#34; srcset=\u0026#34;/images/posts/webnotes/learn_html/mercy-480w.png\u0026#34;\u0026gt; \u0026lt;!-- 平板电脑竖屏 --\u0026gt; \u0026lt;source media=\u0026#34;(max-width: 991px)\u0026#34; srcset=\u0026#34;/images/posts/webnotes/learn_html/mercy-800w.png\u0026#34;\u0026gt; \u0026lt;!-- 平板电脑横屏 / 笔记本电脑 --\u0026gt; \u0026lt;source srcset=\u0026#34;/images/posts/webnotes/learn_html/mercy-1280w.png\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;/images/posts/webnotes/learn_html/mercy-1280w.jpg\u0026#34; alt=\u0026#34;Overwatch mercy\u0026#34;\u0026gt; \u0026lt;/picture\u0026gt; 效果（调整浏览器宽度以查看变化）：\n  应该仅仅在美术设计场景下使用media属性；当使用media时，不要在sizes属性中也提供媒体条件。\r\r为什么不能使用 CSS 或 JavaScript 来做到这一效果？ 如果使用CSS或JavaScript来实现这一效果，在这之前原始图像已经被加载了，然后CSS或JavaScript又加载了一个小的图像，反而浪费发了流量。\n大胆使用现代图像格式 新图像格式（例如 WebP 和 JPEG-2000）可以在有高质量的同时有较低的文件大小。但是浏览器支持情况不同。\n可以使用 \u0026lt;picture\u0026gt; 来继续满足老式浏览器的需要。可以在 type 属性中提供 MIME 类型，这样浏览器就能立即拒绝不支持的类型：\n\u0026lt;picture\u0026gt; \u0026lt;source type=\u0026#34;image/svg+xml\u0026#34; srcset=\u0026#34;***.svg\u0026#34;\u0026gt; \u0026lt;source type=\u0026#34;image/webp\u0026#34; srcset=\u0026#34;***.webp\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;***.png\u0026#34; alt=\u0026#34;example image\u0026#34;\u0026gt; \u0026lt;/picture\u0026gt;  不要使用 media 属性，除非需要美术设计。 在 \u0026lt;source\u0026gt; 元素中，只可以引用在 type 中声明的文件类型。 如果必要，可以在 srcset 和 sizes 中使用逗号分割的列表。 ","date":"2021-05-05","permalink":"/zh-cn/posts/webnotes/learn_html/","series":["前端"],"tags":["HTML"],"title":"学习HTML"},{"categories":["Shortcode"],"content":"本文展示了如果使用 alert shortcode。\n{{\u0026lt; alert \u0026#34;Message\u0026#34; [type] \u0026gt;}}  The parameter type is optional. Default to info.\n Info {{\u0026lt; alert \u0026#34;Info\u0026#34; \u0026gt;}} Info\r\rSuccess {{\u0026lt; alert \u0026#34;Success\u0026#34; success \u0026gt;}} Success\r\rWarning {{\u0026lt; alert \u0026#34;Warning\u0026#34; warning \u0026gt;}} Warning\r\rDanger {{\u0026lt; alert \u0026#34;Danger\u0026#34; danger \u0026gt;}} Danger\r","date":"2020-10-22","permalink":"/zh-cn/posts/shortcodes/alert/","series":["用户手册"],"tags":["Alert"],"title":"Alert Shortcode"},{"categories":["Shortcode"],"content":"关于哔哩哔哩 shortcode 的详细使用说明。\n使用 {{\u0026lt; bilibili \u0026#34;video id\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/zh-cn/posts/shortcodes/bilibili/","series":null,"tags":["哔哩哔哩"],"title":"Bilibili Shortcode"},{"categories":["Shortcode"],"content":"关于 CodePen shortcode 的详细说明。\n使用 {{\u0026lt; codepen \u0026#34;id\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/zh-cn/posts/shortcodes/codepen/","series":null,"tags":["CodePen"],"title":"CodePen Shortcode"},{"categories":["Shortcode"],"content":"关于 JSFiddle shortcode 的详细说明。\n使用 {{\u0026lt; jsfiddle \u0026#34;user/id\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/zh-cn/posts/shortcodes/jsfiddle/","series":null,"tags":["JSFiddle"],"title":"JSFiddle Shortcode"},{"categories":["Shortcode"],"content":"关于 JSRun shortcode 的详细说明。\n使用 {{\u0026lt; jsrun \u0026#34;id\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/zh-cn/posts/shortcodes/jsrun/","series":null,"tags":["JSRun"],"title":"JSRun Shortcode"},{"categories":["Shortcode"],"content":"关于优酷 shortcode 的详细说明。\n使用 {{\u0026lt; youku \u0026#34;XNTQwMTgxMTE2\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/zh-cn/posts/shortcodes/youku/","series":null,"tags":["Youku"],"title":"优酷 Shortcode"},{"categories":["Shortcode"],"content":"关于爱奇艺 shortcode 的详细说明。\n使用 {{\u0026lt; iqiyi \u0026#34;vid\u0026#34; \u0026#34;tvid\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/zh-cn/posts/shortcodes/iqiyi/","series":null,"tags":["爱奇艺"],"title":"爱奇艺 Shortcode"},{"categories":["Shortcode"],"content":"关于网易云音乐 Shortcode 的详细使用说明。\n使用 {{\u0026lt; neteasemusic \u0026#34;id\u0026#34; [auto [type]] \u0026gt;}}    Parameter Description     auto The auto controls whether to autoplay. Boolean and optional, default to false.   type The type parameter is optional. Default to 2.    例子 \r","date":"2020-10-22","permalink":"/zh-cn/posts/shortcodes/neteasemusic/","series":null,"tags":["网易云音乐"],"title":"网易云音乐 Shortcode"},{"categories":["Shortcode"],"content":"关于腾讯视频 shortcode 的详细说明。\n使用 {{\u0026lt; tencentvideo \u0026#34;vid\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/zh-cn/posts/shortcodes/tencentvideo/","series":null,"tags":["腾讯视频"],"title":"腾讯视频 Shortcode"}]